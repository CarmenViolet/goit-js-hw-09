{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAS,CAACC,EAASC,KAC9BC,YAAW,KACLN,EACJI,EAAQ,C,SAACN,E,MAAUC,IAEnBM,EAAO,C,SAACP,E,MAAUC,MAChBA,MAbSQ,SAASC,cAAc,SAE/BC,iBAAiB,UAexB,SAA0BC,GACxBA,EAAMC,iBAER,IAAKZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAUJ,EAAMK,OAAOC,SACzCJ,EAAQK,OAAOL,EAAMM,OAErB,IAAI,IAAIC,EAAM,EAAGA,GAAOL,EAAOI,MAAOC,GAAO,EAC3CtB,EAAcsB,EAAKP,GAClBQ,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAqBzB,QAAiBC,UAE/DyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOG,QAAQ,sBAAoB3B,QAAeC,UAG7Da,GAASK,OAAOJ,EAAKK","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', generatePromises);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise ((resolve, reject) => {\n  setTimeout(() => {\n    if (shouldResolve) {\n    resolve({position, delay});\n  } else {\n    reject({position, delay});\n  }}, delay )\n});\n};\n\nfunction generatePromises(event) {\n  event.preventDefault();\n\nlet {delay, step, amount} = event.target.elements; \ndelay = Number(delay.value);\n\nfor(let amo = 1; amo <= amount.value; amo += 1) {\n  createPromise(amo, delay)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n  delay += Number(step.value);\n}\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","step","amount","target","elements","Number","value","amo","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.5850b4d4.js.map"}